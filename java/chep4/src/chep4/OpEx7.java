package chep4;
/*
 * 비트연산자: &(and),|(or),^(XOR),~(not) : 정수*/
public class OpEx7 {

	public static void main(String[] args) {
		System.out.println("6 & 3 ="+(6 & 3));
		/*
		 * 6: 0110
		 * 3: 0011
		 * ---------
		 * &  0010	:2
		 */
		System.out.println("6 | 3 ="+(6 | 3));
		/*
		 * 6: 0110
		 * 3: 0011
		 * ---------
		 * |  0111	:7
		 */
		System.out.println("6 ^ 3 ="+(6 ^ 3));
		/*
		 * 6: 0110
		 * 3: 0011
		 * ---------
		 * ^  0101	:5
		 */
		System.out.println("~10 ="+ ~10);
		/*
		 * 10: 00001010
		 * -------------
		 *     11110101 	:???why -11
		 * ~ : 0->1/1->0
		 * 음수는 2의 보수로 표현한다.
		 * 2의 보수 : 1의보수+ 1값
		 * 
		 * 부호 bit가 1이므로 숫자를 2의 보수로 취급함.
		 * 
		 * 1110101:? 수의 2의 보수.
		 * 		   1110101의 2의 수가 ? 수임:
		 * 		
		 * 			1110101
		 *		    -------
		 *1의 보수		0001010
		 *2의 보수 		0001011 : ? 11
		 */
	}

}
